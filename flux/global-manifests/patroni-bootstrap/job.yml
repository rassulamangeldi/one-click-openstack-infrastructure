apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-patroni
  namespace: flux-system
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: ansible-bootstrap
          image: rassulamanngeldi/patroni-ansible-one-click-openstack-infra:latest
          command: ["/bin/bash", "-c"]
          args:
            - |
              # Wait for all VMs to be reachable via SSH
              echo "==== Waiting for SSH on all nodes ===="
              for ip in 10.129.2.71 10.129.2.72 10.129.2.73 10.129.2.74 10.129.2.75 10.129.2.76; do
                echo "Waiting for $ip..."
                while ! ssh -o BatchMode=yes -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i ~/.ssh/patroni-ssh.pem mycar@$ip 'exit' 2>/dev/null; do
                  echo "  $ip not ready, sleeping..."
                  sleep 10
                done
                echo "  $ip is ready!"
              done

              # SSH keys
              mkdir -p ~/.ssh
              cp /secrets-gitlab/id_rsa ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              ssh-keyscan gitlab.mycar.kz >> ~/.ssh/known_hosts

              cp /secrets-ansible/patroni.pem ~/.ssh/patroni-ssh.pem
              chmod 600 ~/.ssh/patroni-ssh.pem

              # Install roles and collections
              echo "==== Installing roles ===="
              ansible-galaxy role install -r requirements.yml

              echo "==== Installing collections ===="
              ansible-galaxy collection install -r requirements.yml

              cp -r ~/.ansible/collections /ansible

              ansible-playbook playbook.yml \
                -i inventory.yml \
                --user mycar \
                --become \
                -e "@vars.yml" \
                --private-key=~/.ssh/patroni-ssh.pem

              ansible-playbook playbooks/deploy_pgcluster.yml \
                -i inventory.yml \
                --user mycar \
                --become \
                -e "@vars.yml" \
                --private-key=~/.ssh/patroni-ssh.pem

              echo "==== Finished successfully ===="
              sleep infinity
          volumeMounts:
            - name: gitlab-ssh
              mountPath: /secrets-gitlab
              readOnly: false
            - name: ansible-ssh
              mountPath: /secrets-ansible
              readOnly: false
      volumes:
        - name: gitlab-ssh
          secret:
            secretName: gitlab-ssh-key
        - name: ansible-ssh
          secret:
            secretName: ansible-ssh-key
            items:
              - key: privateKey
                path: patroni.pem
