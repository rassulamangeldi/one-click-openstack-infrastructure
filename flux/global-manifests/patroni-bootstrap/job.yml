apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-patroni
  namespace: flux-system
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: ansible-bootstrap
          image: ppikta/ansible:2.18-ubuntu-24.04
          command: ["/bin/bash", "-c"]
          args:
            - |
              # === SSH Configuration ===
              mkdir -p ~/.ssh

              # GitLab SSH key for fetching code
              cp /secrets-gitlab/id_rsa ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              ssh-keyscan gitlab.mycar.kz >> ~/.ssh/known_hosts

              # Patroni SSH key for Ansible access to VMs
              cp /secrets-ansible/patroni.pem ~/.ssh/patroni-ssh.pem
              chmod 600 ~/.ssh/patroni-ssh.pem

              # Add VM IPs to known_hosts
              for ip in 10.129.2.71 10.129.2.72 10.129.2.73 10.129.2.74 10.129.2.75 10.129.2.76; do
                ssh-keyscan "$ip" >> ~/.ssh/known_hosts
              done

              # === Ansible Directory Setup ===
              mkdir -p /tmp/ansible/roles
              mkdir -p /tmp/ansible/collections
              cp -rL /ansible/* /tmp/ansible

              # Extract playbooks from tarball
              tar --no-xattrs --no-same-owner --no-same-permissions \
                -xzf /tmp/ansible/playbooks.tgz -C /tmp/ansible

              # Copy collection roles into Ansible roles path
              cp -rL /tmp/ansible/collections/ansible_collections/postgresql/cluster/roles/* \
                /tmp/ansible/roles/

              # === Ansible Environment Setup ===
              export ANSIBLE_CONFIG=/tmp/ansible/ansible.cfg
              export ANSIBLE_COLLECTIONS_PATHS="/tmp/ansible/collections:/root/.ansible/collections:/usr/share/ansible/collections"

              # Install roles and collections
              echo "==== Installing roles ===="
              ansible-galaxy role install -r /tmp/ansible/requirements.yml --roles-path /tmp/ansible/roles

              echo "==== Installing collections ===="
              ansible-galaxy collection install -r /tmp/ansible/requirements.yml \
                --collections-path /tmp/ansible/collections

              # === Run Ansible ===
              cd /tmp/ansible

              # Uncomment one of these to execute
              ansible-playbook playbook.yml \
                -i inventory.yml \
                --user mycar \
                --become \
                -e "@/tmp/ansible/vars.yml" \
                --private-key=~/.ssh/patroni-ssh.pem

              ansible-playbook playbooks/deploy_pgcluster.yml \
                -i inventory.yml \
                --user mycar \
                --become \
                -e "@/tmp/ansible/vars.yml" \
                --private-key=~/.ssh/patroni-ssh.pem

              echo "==== Ready to debug in the pod shell ===="
              sleep infinity
          volumeMounts:
            - name: ansible-data
              mountPath: /ansible
            - name: gitlab-ssh
              mountPath: /secrets-gitlab
              readOnly: false
            - name: ansible-ssh
              mountPath: /secrets-ansible
              readOnly: false
      volumes:
        - name: ansible-data
          configMap:
            name: ansible-patroni-data
        - name: gitlab-ssh
          secret:
            secretName: gitlab-ssh-key
        - name: ansible-ssh
          secret:
            secretName: ansible-ssh-key
            items:
              - key: privateKey
                path: patroni.pem

