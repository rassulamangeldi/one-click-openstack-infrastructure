apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-patroni
  namespace: flux-system
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: ansible-bootstrap
          image: okassov/ansible:2.13-ubuntu
          command: ["/bin/bash", "-c"]
          args:
            - |
              mkdir -p ~/.ssh

              # GitLab SSH key for fetching code 
              cp /secrets-gitlab/id_rsa ~/.ssh/id_rsa
              chmod 600 ~/.ssh/id_rsa
              ssh-keyscan gitlab.mycar.kz >> ~/.ssh/known_hosts

              # Patroni SSH key for connecting to VMs
              cp /secrets-ansible/patroni.pem ~/.ssh/patroni-ssh.pem
              chmod 600 ~/.ssh/patroni-ssh.pem

              for ip in 10.129.2.71 10.129.2.72 10.129.2.73 10.129.2.74 10.129.2.75 10.129.2.76; do
                ssh-keyscan "$ip" >> ~/.ssh/known_hosts
              done

              # Prepare Ansible directories
              mkdir -p /tmp/ansible/roles
              mkdir -p /tmp/ansible/collections
              export ANSIBLE_CONFIG=/tmp/ansible/ansible.cfg
              export ANSIBLE_COLLECTIONS_PATHS="/tmp/ansible/collections:/root/.ansible/collections:/usr/share/ansible/collections"

              echo "==== Installing roles ===="
              ansible-galaxy role install -r /ansible/requirements.yml --roles-path /tmp/ansible/roles

              echo "==== Installing collections ===="
              ANSIBLE_COLLECTIONS_PATHS=/tmp/ansible/collections \
                ansible-galaxy collection install -r /ansible/requirements.yml

              echo "==== Copying collection roles ===="
              cp -rL /ansible/* /tmp/ansible
              cp -rL /tmp/ansible/collections/ansible_collections/postgresql/cluster/roles/* /tmp/ansible/roles/

              echo "==== Extracting playbooks ===="
              tar --no-xattrs --no-same-owner --no-same-permissions -xzf /ansible/playbooks.tgz -C /tmp/ansible

              echo "==== Running Ansible ===="
              cd /tmp/ansible
              # ansible-playbook playbook.yml \
              #   -i inventory.yml \
              #   --user mycar \
              #   --become \
              #   -e "@/tmp/ansible/vars.yml" \
              #   --private-key=~/.ssh/patroni-ssh.pem

              sleep infinity
          volumeMounts:
            - name: ansible-data
              mountPath: /ansible
            - name: gitlab-ssh
              mountPath: /secrets-gitlab
              readOnly: false
            - name: ansible-ssh
              mountPath: /secrets-ansible
              readOnly: false
      volumes:
        - name: ansible-data
          configMap:
            name: ansible-patroni-data
        - name: gitlab-ssh
          secret:
            secretName: gitlab-ssh-key
        - name: ansible-ssh
          secret:
            secretName: ansible-ssh-key
            items:
              - key: privateKey
                path: patroni.pem

