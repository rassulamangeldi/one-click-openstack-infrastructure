---
- name: Deploy PostgreSQL HA Cluster (based on "Patroni")
  hosts: localhost
  gather_facts: true
  any_errors_fatal: true
  collections:
  - postgresql.cluster
  pre_tasks:
    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
      tags: always

    - name: "Set variable: 'pgbackrest_install' to configure Postgres backups"
      ansible.builtin.set_fact:
        pgbackrest_install: true
      when:
        - not (pgbackrest_install | bool or wal_g_install | bool)
        - cloud_provider | default('') | lower in ['aws', 'gcp', 'azure']
        - pgbackrest_auto_conf | default(true) | bool
      tags: always
  roles:
    - role: postgresql.cluster.cloud-resources
      when: cloud_provider | default('') | length > 0
      tags: always

- name: deploy_pgcluster.yml | Perform pre-checks
  hosts: all
  become: true
  become_method: sudo
  collections:
  - postgresql.cluster
  gather_facts: true
  any_errors_fatal: true
  environment: "{{ proxy_env | default({}) }}"

  pre_tasks:
    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
      tags: always

    - name: Include system variables
      ansible.builtin.include_vars: "vars/system.yml"
      tags: always

    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: System info
      ansible.builtin.debug:
        msg:
          server_name: "{{ hostname | default(ansible_hostname) }}"
          server_location: "{{ server_location | default(omit) }}"
          ip_address: "{{ inventory_hostname | default('N/A') }}"
          os: "{{ ansible_distribution | default('N/A') }} {{ ansible_distribution_version | default('N/A') }}"
          kernel: "{{ ansible_kernel | default('N/A') }}"
          cpu:
            model: "{{ ansible_processor[2] | default('N/A') }}"
            count: "{{ ansible_processor_count | default('N/A') }}"
            cores: "{{ ansible_processor_cores | default('N/A') }}"
          memory: "{{ (ansible_memtotal_mb / 1024) | round(2) if ansible_memtotal_mb is defined else 'N/A' }} GB"
          disk_space_total: >-
            {{
              (ansible_mounts
                | map(attribute='size_total')
                | map('int')
                | sum / 1024 / 1024 / 1024
              )
              | round(2) if ansible_mounts is defined else 'N/A'
            }} GB
          architecture: "{{ ansible_architecture | default('N/A') }}"
          virtualization_type: "{{ ansible_virtualization_type | default('N/A') }}"
          product_name: "{{ ansible_product_name | default('N/A') }}"
      tags: always

    - name: "Set variable: 'pgbackrest_install' to configure Postgres backups"
      ansible.builtin.set_fact:
        pgbackrest_install: true
      when:
        - not (pgbackrest_install | bool or wal_g_install | bool)
        - cloud_provider | default('') | lower in ['aws', 'gcp', 'azure']
        - pgbackrest_auto_conf | default(true) | bool
      tags: always

  roles:
    - role: postgresql.cluster.authorized-keys
      tags: ssh_public_keys

    - role: postgresql.cluster.pre-checks
      vars:
        minimal_ansible_version: 2.15.0
        timescale_minimal_pg_version: 12
      tags: always
